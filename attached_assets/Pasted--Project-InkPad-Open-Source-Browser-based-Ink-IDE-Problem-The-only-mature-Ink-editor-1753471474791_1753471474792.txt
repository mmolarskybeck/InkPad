# 🛠️ Project: InkPad — Open Source Browser‑based Ink IDE
## 🧩 Problem
The only mature Ink editor (Inky) is closed-source and desktop-only. Writers and developers need a web-based, install-free alternative that runs on Chromebooks, work machines, and anywhere else Inky can’t.
## 🎯 Users
- Indie game devs using Ink (inkle)
- Narrative designers & IF writers
- Students & professionals on locked-down devices
- Teams wanting self-hostable OSS tools
## 💡 Solution
- Build InkPad, a single-page web app that lets users:
- Write Ink scripts in-browser
- Run them live with inkjs
- See errors, navigate knots, inspect variables
- Save/load locally (MVP)
- Stretch: add a graph view + Dialogic export (for Godot 4.x)
## 🧱 Tech Stack
- Frontend: React + TypeScript + Vite
- Editor: Monaco Editor with basic Ink syntax highlighting
- Runtime: inkjs (runs stories in-browser)
- UI: Tailwind CSS + shadcn/ui
- Persistence: LocalStorage (MVP); stub /api/stories for future saves
- Deployment: Static deploy to Vercel (or Netlify if needed)
- Graph View (stretch): React Flow
## ✅ MVP Features
- Split View: Monaco Editor (left) + live preview (right)
- Run/Restart story using inkjs
- Menu: 
  - New / Save / Load (LocalStorage) / Export .ink or .json
- Live Error Reporting:
  - Parse Ink with debounce
  - Show errors w/ line markers + collapsible panel
- Knot Navigator:
  - Dropdown of parsed knots
  - Clicking jumps to knot in editor
- Variable Inspector:
  - Show runtime Ink variables
## 🚀 Stretch Goals
- Graph View (read-only): visualize knots + diverts via React Flow
- Dialogic Export: convert Ink to Godot Dialogic JSON format
- Cloud Save: /api/stories with shareable links via PostgreSQL backend
## 🧭 User Flow
- User visits /, sees editor + preview
- Types Ink → errors parsed live
- Runs story with inkjs
- Jumps between knots via dropdown
- Inspects variables while previewing
- Saves locally or exports files
- (Optional) switches to Graph View
## 🧪 Success Criteria
- Loads + runs Ink from inkle’s sample stories
- Error markers + knot navigation functional
- Works 100% client-side for MVP
- Fast load (under 5s), clean deploy, clear README
## 🔧 Backend (Optional)
- Stub /api/stories route (POST/GET) using Encore, with persistence ready but not enabled by default.
## 🧼 OSS Hygiene
- License: MIT
- Include README, CONTRIBUTING.md, and clean modular code
- Scaffold project structure for easy extension
- Include sample .ink story for demo
## AI-Specific Guidance
- Add helpers to extract knots, errors, and variables from Ink
- Wire Monaco markers to error lines
- Debounce compile/run to improve performance
- Keep architecture modular to support Graph View later
Please scaffold this as a full frontend app with the above features, and include a stubbed backend for future expansion. Prioritize a working MVP with no server dependency.